#= require jplayer/jquery.jplayer.min
#= require jquery.raty.min

class SCPlayer
  constructor: (@widget, @tracks) ->
    @player  = @widget.find('.jplayer')
    @track   = null
    @playing = false
    
    @initializePlayer()
  
  initializePlayer: ->
    @player.jPlayer(
      swfPath:  '<%= asset_path("jplayer/Jplayer.swf") %>'
      supplied: 'mp3'
      volume:   0.8,
      ready: => @change @tracks[0] if @tracks.length >= 1
    ).bind(
      $.jPlayer.event.timeupdate,
      (event) => @updateTimer(event)
    )
  
  updateTimer: (event) ->
    status = event.jPlayer.status
    currentTime = $.jPlayer.convertTime(status.currentTime)
    @widget.find('.current-time').text(currentTime)
  
  perform: (args...) ->
    @player.jPlayer args...
  
  isPlaying: ->
    @playing
  
  next: ->
    if nextTrack = @tracks[@tracks.index(@track) + 1]
      @change nextTrack
    else
      @change @tracks[0]
    @play()
  
  prev: ->
    if prevTrack = @tracks[@tracks.index(@track) - 1]
      @change prevTrack
    else
      @change @tracks[@tracks.length - 1]
    @play()
  
  play: (args...) ->
    unless @playing
      @playing = true
      @perform 'play', args...
  
  pause: (args...) ->
    if @playing
      @playing = false
      @perform 'pause', args...
  
  updateTrackInfo: ->
    trackInfo = @widget.find('.time')
    duration  = $.jPlayer.convertTime(parseInt(@track.attr('data-length')))
    artist    = @track.find('.track-artist').text()
    title     = @track.find('.track-title').text()
    
    trackInfo.find('.current-time').text('00:00')
    trackInfo.find('.track-length').text(duration)
    trackInfo.find('.track-artist').text(artist)
    trackInfo.find('.track-title').text(title)
  
  change: (track) ->
    @track = $ track
    
    # Set the track so we can play it:
    file = @track.attr('data-attachment-url')
    @perform 'setMedia', mp3: file
    
    # If we're already playing, start playing the track we're switching to:
    if @playing
      @pause()
      @updateTrackInfo()
      @play()
    else
      @updateTrackInfo()

$ ->
  if $.fn.raty?
    $('.star').parent().find('select.rating').hide()
    $('.star').raty
      starHalf: '<%= image_path "icons/star-half.png" %>'
      starOff:  '<%= image_path "icons/star-off.png" %>'
      starOn:   '<%= image_path "icons/star-on.png"  %>',
      half:  true,
      click: (stars, event) ->
        if stars
          score = stars * 2
          $(this).parent().find('select.rating').val(score)
      score: ->
        score = $(this).parent().find('select.rating').val()
        if score
          score / 2
        else
          false
  
  if $.fn.jPlayer?
    player = new SCPlayer($('.release-player'), $('.player-track'))
    
    # Click on playlist:
    $('.player-track-title').on    'click', -> player.change($(this).parent())
    
    # Click on prev/next button:
    $('.release-player .left').on  'click', -> player.prev()
    $('.release-player .right').on 'click', -> player.next()
    
    # Click on play/pause button:
    $('.release-player .playpause').on 'click', ->
      button = $ this
      if player.isPlaying()
        player.pause()
        button.removeClass('playing')
              .addClass('paused')
      else
        player.play()
        button.removeClass('paused')
              .addClass('playing')
    